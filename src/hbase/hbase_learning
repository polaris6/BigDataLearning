HBase：
    Hadoop Database的简称，HBase是分布式、面向列、用于海量数据的高速存储和读取的NoSQL数据库(准确的说是面向列族)，HDFS为HBase提供可靠的
底层数据存储服务，MapReduce为HBase提供高性能的计算能力，Zookeeper为HBase提供稳定服务和Failover机制。


Column Family(列族)：
    HBase采用的是列式存储，根据列族来存储数据。列族是由一个一个的列组成，列族下面可以包含任意多的列，实现灵活的数据存取。
HBase的列族不是越多越好，官方推荐的是列族最好小于或者等于3，我们使用的场景一般是1个列族。HBase表创建的时候就必须指定列族。


RowKey(行键)：
    RowKey的概念和mysql中的主键是完全一样的，HBase使用RowKey来唯一的区分某一行的数据，行是按RowKey的字典序排序的。
    HBase中的行是逻辑上的行，物理上行是按列族(Column family)分别存取的。


TimeStamp(时间戳)：
    在HBase中使用不同的timestamp来标识相同RowKey行对应的不通版本的数据。在写入数据的时候，如果用户没有指定对应的timestamp，
HBase会自动添加一个timestamp，timestamp和服务器时间保持一致。在HBase中，相同RowKey的数据按照timestamp倒序排列，默认查询的
是最新的版本，可以通过指定timestamp的值来读取旧版本的数据。


Region：
    Region的概念类似于partition，HBase中的每张表都在行的方向上被分割成多个子表(Region)，每个Region负责一部分RowKey范围的
数据的读写和维护。Region是HBase中分布式存储和负载均衡的最小单元，Region包含了对应的起始行到结束行的所有信息。master将对应的
region分配给不同的RegionServer，由RegionSever来提供Region的读写服务和相关的管理工作。
    Region按大小分割，每个表一开始只有一个region，随着数据不断插入表，region不断增大，当增大到一个阀值的时候(region的某个列族
达到一个阈值(默认256M))，region就会等分会两个新的region。当table中的行不断增多，就会有越来越多的region。
    Region图模拟了一个HBase的表是如何拆分成region，以及分配到不同的RegionServer中去。上面是1个Userinfo表，里面有7条记录，
其中RowKey为0001到0002的记录被分配到了Region1上，RowKey为0003到0004的记录被分配到了Region2上，而RowKey为0005、0006和
0007的记录被分配到了Region3上。region1和region2被master分配给了RegionServer1(RS1)，Region3被master配分给了RegionServer2(RS2)。


Store：
    每个Region由一个或多个Store组成，至少是一个Store，HBase会把一起访问的数据放在一个Store里面，即为每个ColumnFamily建一个Store，
有几个ColumnFamily，也就有几个Store。一个Store由一个memStore和0或者多个StoreFile组成，Store的大小被HBase用来判断是否需要切分Region。


HLog：
    HLog记录数据的所有变更，可以用来恢复文件，一旦region server 宕机，就可以从log中进行恢复。


HBase概念视图：
    如图概念视图，来自于HBase官网的webtable表，其中包含两行（com.cnn.www和com.example.www）以及名为contents、anchor和people的
三个列族。
    对于第一行（com.cnn.www），列族anchor包含两列（anchor:cnnsi.com，anchor:my.look.ca），列族contents包含一列（contents:html）。
具有行键com.cnn.www的行有5个版本，具有行键com.example.www的行有一个版本。contents:html列限定符包含给定网站的整个HTML，锚（anchor）列族
的限定符每个包含与该行所表示的站点链接的外部站点以及它在其链接的锚点（anchor）中使用的文本。people列族代表与该网站相关的人员。
    列名称：列名由其列族前缀和限定符组成。例如contents:html列由列族contents和html限定符组成，冒号起分隔作用。
    此表中显示为空的单元格在HBase中不占用空间，这正是使HBase"稀疏"的原因。对于为空(null)的列，并不占用存储空间，因此表可以设计的非常稀疏。


HBase物理视图：


















建表：
    HBase中表是在 schema 定义时被预先声明的，建表时必须指定表名和列族名
    create ‘<table name>’,’<column family>’



