一：Hive介绍
1、设计初衷：
我们学习hadoop的时候，为了让那些不太会java语言但是对SQL很熟悉的工程师能够操作基本的MapReduce计算过程，Hive被设计出来了。Hive就好比是
hadoop在执行MR(MapReduce)程序的一个操作系统，我们可以用简单的SQL语句去代替复杂的MR程序，因为Hive可以将我们的SQL语句转化为MR程序然后去执行。
Hive的语法和SQL的语法很多地方是相同的，所以说它就是为熟连使用SQL的工程师设计的。
2、介绍：
Hive是分布式数据仓库，Hive管理HDFS中存储的数据，并提供基于SQL的查询语言（由运行时引擎翻译成MapReduce作业）用以查询数据。
Hive是一个基于Hadoop的数据仓库工具；
Hive本身不提供数据存储功能，使用HDFS做数据存储；
Hive也不提供分布式计算框架，Hive的核心工作就是把sql语句翻译成MR程序；
Hive不提供资源调度系统，也是默认由Hadoop中YARN集群来调度；
它可以将结构化的数据映射为一张数据库表，并提供HQL(Hive SQL)查询功能。

Hive具有sql数据库的外表，但应用场景完全不同，Hive只适合用来做批量数据统计分析。


二：Hive数据的存储
1、Hive中所有的数据都存储在HDFS中，没有专门的数据存储格式（可支持Text，SequenceFile，ParquetFile，RCFILE等)。
2、只需要在创建表的时候告诉Hive数据中的列分隔符和行分隔符，Hive就可以解析数据。
3、Hive中包含以下数据模型：DB、Table，External Table，Partition，Bucket。
db：在HDFS中表现为${hive.metastore.warehouse.dir}目录下一个文件夹
table：在HDFS中表现所属db目录下一个文件夹
external table：与table类似，不过其数据存放位置可以在任意指定路径
partition：在HDFS中表现为table目录下的子目录
bucket：在HDFS中表现为同一个表目录下根据hash散列之后的多个文件




Hive可以将大多数的查询转换为MapReduce任务（job）
1、创建源表并插入数据
CREATE TABLE docs(
   line STRING
);
LOAD DATA INPATH 'tmp/input' OVERWRITE INTO TABLE docs;
如果想从本地导入，可以使用这个LOAD DATA LOCAL INPATH '...'。

2、用Hive实现map/reduce的计算
CREATE TABLE word_count AS
SELECT word,count(1) AS count FROM
   (SELECT explode(split(line,'\s')) AS word FROM docs) w
GROUP BY word
ORDER BY word;

explode()可以将hive一行中复杂的array或者map结构拆分成多行，相当于行转列
示例：
+------------------+
| Array<int> myCol |
+------------------+
| [100,200,300]    |
| [400,500,600]    |
+------------------+
SELECT explode(myCol) AS myNewCol FROM myTable;
+---------------+
| (int)myNewCol |
+---------------+
|    100        |
|    200        |
|    300        |
|    400        |
|    500        |
|    600        |
+---------------+





Hive最适合于数据仓库程序，对于数据仓库程序不需要实时响应查询，不需要记录级别的插入、更新和删除。



数据库字段如果被设置为允许为空,在插入数据时不指定那个字段的值, 那么其值肯定为null。数据库字段的运算中，null与任何值运算的结果都是null，比如
100+null结果为null，这点要切记。
解决办法：
1、可以使用isnull函数指定在其值为null情况下的取值:
   update tableName set num = isnull(num, 0) + 接收到的数 where id=XXX
2、可以使用case when来进行条件判断取值:
   update tableName set num = (case when num is null then 0 when num > 0 then num else 小于等于0情况下的值 end)
   + 接收到的数 where id=XXX
Hive处理null值的函数 https://blog.csdn.net/qq_34941023/article/details/51440579


https://blog.csdn.net/freefish_yzx/article/details/77150248

Hive客户端工具：Beeline